type IDOFactory @entity{
    id: ID!
    feeToken: Bytes! # address
    feeWallet: Bytes! # address
    feeAmount: BigInt!
    burnPercent: BigInt!
    idos: [IDOCreated!]! @derivedFrom(field: "IDOFactory")
}

type IDOCreated @entity(immutable: true) {
  id: ID!
  owner: Bytes! # address
  idoPool: Bytes! # address
  rewardToken: Bytes! # address
  tokenURI: String! # string
  createdAt: BigInt!
  IDOFactory: IDOFactory!
}


type IDOPool @entity {
  id: ID!

  rewardToken: Bytes! # address
  metadataURL: String

  finInfo: FinInfo!
  timestamps: Timestamps!
  dexInfo: DEXInfo!
  lockerFactory: Bytes! # address
  totalInvestedETH: BigInt!
  tokensForDistribution: BigInt!
  distributedTokens: BigInt!
  distributed: Boolean!

  userInfos: [UserInfo!]! @derivedFrom(field: "IDOPool")

}

type FinInfo @entity(immutable: true) {
  id: ID!
  tokenPrice: BigInt!
  softCap: BigInt!
  hardCap: BigInt!
  minEthPayment: BigInt!
  maxEthPayment: BigInt!
  listingPrice: BigInt!
  lpInterestRate: BigInt!
  IDOPool: IDOPool!
}

type Timestamps @entity(immutable: true) {
  id: ID!
  startTimestamp: BigInt!
  endTimestamp: BigInt!
  unlockTimestamp: BigInt!
  IDOPool: IDOPool!
}

type DEXInfo @entity(immutable: true) {
  id: ID!
  router: Bytes!
  factory: Bytes!
  weth: Bytes!
  IDOPool: IDOPool!
}

type UserInfo @entity {
  id: ID!
  debt: BigInt!
  total: BigInt!
  totalInvestedETH: BigInt!
  IDOPool: IDOPool!
}

